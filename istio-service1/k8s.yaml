apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-reader
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
  - kind: ServiceAccount
    name: config-reader
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods","configmaps"]
    verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: config-reader
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-service1-config
data:
  application.properties: |-
    conf.message=Hello World!
---
apiVersion: v1
kind: Service
metadata:
  name: istio-service1
  labels:
    app: istio-service1
    de.finkonsens/sid: "63-PROTON"
spec:
  selector:
    app: istio-service1
  ports:
    - port: 8080
      name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-service1-v1
  labels:
    app: istio-service1
spec:
  selector:
    matchLabels:
      app: istio-service1
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: istio-service1
        version: v1
    spec:
      containers:
        - name: istio-service1
          image: bigpuritz/istio-service1:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
